{"version":3,"file":"transport-ws.js","sources":["../../../src/publisher/browser/transport-ws.ts"],"sourcesContent":["/* eslint-env browser */\n\nimport socketIO from 'socket.io-client/dist/socket.io.slim.js';\nimport { WsTransport } from '../../transport/ws.js';\nimport { postIdentifyMessage, startIdentify, stopIdentify } from './identify/index.js';\nimport { globalThis, top } from '../../utils/index.js';\n\nconst STORAGE_KEY = 'rempl:id';\ndeclare let REMPL_SERVER: string | boolean;\n\nexport function fetchWsSettings() {\n    function fetchEnvVariable() {\n        if (typeof REMPL_SERVER !== 'undefined' && REMPL_SERVER !== globalThis.REMPL_SERVER) {\n            return REMPL_SERVER;\n        }\n    }\n\n    function fetchMeta() {\n        const meta =\n            typeof document !== 'undefined'\n                ? document.querySelector('meta[name=\"rempl:server\"]')\n                : undefined;\n\n        return (meta && meta.getAttribute('content')) || undefined;\n    }\n    const location = {\n        protocol: 'ws:',\n        hostname: undefined,\n    };\n    const implicitUri = location.protocol + '//' + (location.hostname || 'localhost') + ':8177';\n    let explicitUri = undefined;\n    let setup = fetchEnvVariable();\n\n    if (setup === undefined) {\n        setup = fetchMeta();\n    }\n\n    switch (setup) {\n        case 'none':\n        case undefined:\n        case false:\n            // no explicit setting\n            break;\n\n        case 'implicit':\n        case 'auto':\n        case true:\n            explicitUri = implicitUri;\n            break;\n\n        default:\n            if (typeof setup === 'string') {\n                explicitUri = setup;\n            }\n    }\n\n    return {\n        explicit: explicitUri || implicitUri,\n        implicit: implicitUri,\n    };\n}\n\nexport class BrowserWsTransport extends WsTransport {\n    constructor(uri: string) {\n        super(uri, socketIO);\n\n        const self = this;\n\n        try {\n            this.id = sessionStorage[STORAGE_KEY];\n        } catch (e) {}\n\n        this.socket\n            .on(\n                'rempl:identify',\n                function (num: string | number, callback: (publisherId: string) => void) {\n                    startIdentify((this as any).io.uri, num, callback);\n\n                    for (const publisherId of self.publishers) {\n                        postIdentifyMessage({\n                            op: 'add-publisher',\n                            id: publisherId,\n                            name: publisherId,\n                        });\n                    }\n                }\n            )\n            .on('rempl:stop identify', stopIdentify)\n            .on('disconnect', stopIdentify);\n    }\n\n    get type() {\n        return 'browser';\n    }\n\n    setClientId(id: string) {\n        super.setClientId(id);\n        try {\n            sessionStorage[STORAGE_KEY] = this.id;\n        } catch (e) {}\n    }\n\n    getInfo() {\n        return {\n            ...super.getInfo(),\n            location: String(' '),\n            title: top?.REMPL_TITLE || top?.document?.title || top?.location?.href || 'Unknown',\n        };\n    }\n}\n\nexport function createBrowserWsTransport(uri: string) {\n    return new BrowserWsTransport(uri);\n}\n"],"names":["globalThis","top"],"mappings":"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"}