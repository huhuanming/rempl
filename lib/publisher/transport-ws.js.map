{"version":3,"file":"transport-ws.js","sources":["../../src/publisher/transport-ws.ts"],"sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport socketIO from 'socket.io-client';\nimport { WsTransport } from '../transport/ws.js';\n\nconst CLIENT_ID_FILENAME = path.resolve('.rempl_endpoint_id'); // FIXME: dirty solution\n\nexport function fetchWsSettings() {\n    function fetchEnvVariable() {\n        return process.env.REMPL_SERVER;\n    }\n\n    const setup: string | undefined = fetchEnvVariable();\n    const implicitUri = 'ws://localhost:8177';\n    let explicitUri = undefined;\n\n    switch (setup) {\n        case 'none':\n        case 'false':\n        case undefined:\n            // no explicit setting\n            break;\n\n        case 'implicit':\n        case 'auto':\n        case 'true':\n            explicitUri = implicitUri;\n            break;\n\n        default:\n            if (typeof setup === 'string') {\n                explicitUri = setup;\n            }\n    }\n\n    return {\n        explicit: explicitUri,\n        implicit: implicitUri,\n    };\n}\n\nexport class NodeWsTransport extends WsTransport {\n    get type() {\n        return 'node';\n    }\n\n    constructor(uri: string) {\n        super(uri, socketIO);\n\n        // TODO make it through temp file\n        if (fs.existsSync(CLIENT_ID_FILENAME)) {\n            this.id = fs.readFileSync(CLIENT_ID_FILENAME, 'utf-8');\n        }\n    }\n\n    setClientId(id: string) {\n        super.setClientId(id);\n        fs.writeFileSync(CLIENT_ID_FILENAME, String(this.id));\n    }\n\n    getInfo() {\n        return {\n            ...super.getInfo(),\n            pid: process.pid,\n            title: process.title,\n        };\n    }\n}\n\nexport function createNodeWsTransport(uri: string) {\n    return new NodeWsTransport(uri);\n}\n"],"names":[],"mappings":";;;;;AAKA,MAAA,kBAAA,GAAA,IAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;AACA;AACA,SAAA,eAAA,GAAA;AACA,IAAA,SAAA,gBAAA,GAAA;AACA,QAAA,OAAA,OAAA,CAAA,GAAA,CAAA,YAAA,CAAA;AACA,KAAA;AACA;AACA,IAAA,MAAA,KAAA,GAAA,gBAAA,EAAA,CAAA;AACA,IAAA,MAAA,WAAA,GAAA,qBAAA,CAAA;AACA,IAAA,IAAA,WAAA,GAAA,SAAA,CAAA;AACA;AACA,IAAA,QAAA,KAAA;AACA,QAAA,KAAA,MAAA,CAAA;AACA,QAAA,KAAA,OAAA,CAAA;AACA,QAAA,KAAA,SAAA;AACA;AACA,YAAA,MAAA;AACA;AACA,QAAA,KAAA,UAAA,CAAA;AACA,QAAA,KAAA,MAAA,CAAA;AACA,QAAA,KAAA,MAAA;AACA,YAAA,WAAA,GAAA,WAAA,CAAA;AACA,YAAA,MAAA;AACA;AACA,QAAA;AACA,YAAA,IAAA,OAAA,KAAA,KAAA,QAAA,EAAA;AACA,gBAAA,WAAA,GAAA,KAAA,CAAA;AACA,aAAA;AACA,KAAA;AACA;AACA,IAAA,OAAA;AACA,QAAA,QAAA,EAAA,WAAA;AACA,QAAA,QAAA,EAAA,WAAA;AACA,KAAA,CAAA;AACA,CAAA;AACA;AACA,MAAA,eAAA,SAAA,WAAA,CAAA;AACA,IAAA,IAAA,IAAA,GAAA;AACA,QAAA,OAAA,MAAA,CAAA;AACA,KAAA;AACA;AACA,IAAA,WAAA,CAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,GAAA,EAAA,QAAA,CAAA,CAAA;AACA;AACA;AACA,QAAA,IAAA,EAAA,CAAA,UAAA,CAAA,kBAAA,CAAA,EAAA;AACA,YAAA,IAAA,CAAA,EAAA,GAAA,EAAA,CAAA,YAAA,CAAA,kBAAA,EAAA,OAAA,CAAA,CAAA;AACA,SAAA;AACA,KAAA;AACA;AACA,IAAA,WAAA,CAAA,EAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,EAAA,CAAA,CAAA;AACA,QAAA,EAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,KAAA;AACA;AACA,IAAA,OAAA,GAAA;AACA,QAAA,OAAA;AACA,YAAA,GAAA,KAAA,CAAA,OAAA,EAAA;AACA,YAAA,GAAA,EAAA,OAAA,CAAA,GAAA;AACA,YAAA,KAAA,EAAA,OAAA,CAAA,KAAA;AACA,SAAA,CAAA;AACA,KAAA;AACA,CAAA;AACA;AACA,SAAA,qBAAA,CAAA,GAAA,EAAA;AACA,IAAA,OAAA,IAAA,eAAA,CAAA,GAAA,CAAA,CAAA;AACA;;;;"}