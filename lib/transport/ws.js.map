{"version":3,"file":"ws.js","sources":["../../src/transport/ws.ts"],"sourcesContent":["// @ts-ignore\nimport { ReactiveValue } from '../classes/ReactiveValue.js';\nimport { EndpointList } from '../classes/EndpointList.js';\nimport * as utils from '../utils/index.js';\nimport { AnyFn } from '../utils/index.js';\nimport { GetRemoteUIInternalHandler, GetRemoteUISettings } from '../types.js';\nimport { TransportPublisher } from '../publisher/TransportPublisher.js';\n\nconst endpoints: Record<string, WsTransport> = Object.create(null);\nconst INFO_UPDATE_TIME = 100;\nconst DEBUG = false;\nconst DEBUG_PREFIX = '[rempl][ws-transport] ';\n\nexport type SelfInfo = Pick<WsTransport, 'id' | 'sessionId' | 'type' | 'publishers'>;\n\nexport type API = {\n    connected: ReactiveValue<boolean>;\n    send(...args: unknown[]): void;\n    subscribe(fn: AnyFn): void;\n};\n\ninterface Socket {\n    emit(...args: unknown[]): void;\n    on(event: string, callback: AnyFn): this;\n}\n\nfunction valuesChanged(a: any, b: any) {\n    for (const key of Object.keys(a)) {\n        const value1 = a[key];\n        const value2 = b[key];\n\n        if (Array.isArray(value1)) {\n            if (valuesChanged(value1, value2)) {\n                return true;\n            }\n        } else {\n            if (String(value1) !== String(value2)) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction normalizeUri(uri: string) {\n    uri = String(uri);\n\n    if (/^\\d+$/.test(uri)) {\n        return 'ws://localhost:' + uri;\n    }\n\n    return uri\n        .replace(/^http:\\/\\//i, 'ws://')\n        .replace(/^https:\\/\\//i, 'wss://')\n        .replace(/^([a-z]+:\\/\\/)|^/i, function (m, protocol) {\n            protocol = protocol ? protocol.toLowerCase() : '';\n            return protocol === 'ws://' || protocol === 'wss://' ? protocol : 'ws://';\n        });\n}\n\nfunction subscribe(this: WsTransport, endpoint: string | null, fn: AnyFn) {\n    return utils.subscribe(this.dataCallbacks, {\n        endpoint,\n        fn,\n    });\n}\n\nfunction send(this: WsTransport, endpoint: string | null, callback?: AnyFn) {\n    this.send('rempl:from publisher', endpoint, callback);\n}\n\nfunction onConnect(this: WsTransport) {\n    clearInterval(this.sendInfoTimer as number);\n\n    this.connected.set(true);\n    this.info = this.getInfo();\n\n    this.send('rempl:endpoint connect', this.info, (data) => {\n        if ('id' in data) {\n            this.setClientId(data.id);\n        }\n\n        this.sendInfoTimer = setInterval(this.sendInfo.bind(this), INFO_UPDATE_TIME);\n    });\n\n    if (DEBUG) {\n        console.log(DEBUG_PREFIX + 'connected');\n    }\n}\n\nfunction onGetUI(\n    this: WsTransport,\n    id: string | null,\n    settings: GetRemoteUISettings,\n    callback: (\n        error: string | null,\n        type?: 'url' | 'script',\n        value?: string | Record<string, string>\n    ) => void\n) {\n    const publisherMeta = this.publishersMap.get(id as string);\n\n    if (!publisherMeta) {\n        if (DEBUG) {\n            console.error(DEBUG_PREFIX + 'Publisher `' + id + \"` isn't registered\");\n        }\n\n        callback('Publisher `' + id + \"` isn't registered\");\n        return;\n    }\n\n    return publisherMeta\n        .getRemoteUI(settings || {})\n        .catch((error) => ({ error: String(error?.message) }))\n        .then((res) => {\n            if ('error' in res) {\n                callback(res.error);\n            } else {\n                callback(null, res.type, res.value);\n            }\n        });\n}\n\nfunction onData(this: WsTransport, id: string | null, ...args: unknown[]) {\n    if (!this.publishersMap.has(id as string)) {\n        if (DEBUG) {\n            console.error(DEBUG_PREFIX + 'Publisher `' + id + \"` isn't registered\");\n        }\n\n        return;\n    }\n\n    this.dataCallbacks.forEach(function (callback) {\n        if (callback.endpoint === id) {\n            callback.fn.apply(null, args);\n        }\n    });\n}\n\nfunction onDisconnect(this: WsTransport) {\n    if (DEBUG) {\n        console.log(DEBUG_PREFIX + 'disconnected');\n    }\n\n    clearInterval(this.sendInfoTimer as number);\n    this.connected.set(false);\n}\n\nexport class WsTransport {\n    static get(endpoint: string, socketIO: any): WsTransport {\n        if (endpoint in endpoints) {\n            return endpoints[endpoint];\n        }\n\n        return (endpoints[endpoint] = new this(endpoint, socketIO));\n    }\n\n    publishers: string[] = [];\n    publishersMap = new Map<string, { getRemoteUI: GetRemoteUIInternalHandler }>();\n    dataCallbacks: Array<{ endpoint: string | null; fn: AnyFn }> = [];\n\n    connected = new ReactiveValue(false);\n    ownEndpoints = new EndpointList();\n    remoteEndpoints = new EndpointList();\n\n    socket: Socket;\n\n    sessionId = utils.genUID();\n    id: string | null = null;\n    sendInfoTimer: number | NodeJS.Timeout | null = null;\n    info = this.getInfo();\n\n    constructor(uri: string, socketIO: any) {\n        if (DEBUG) {\n            console.log(DEBUG_PREFIX + 'connecting to ' + normalizeUri(uri));\n        }\n\n        this.socket = socketIO\n            .connect(normalizeUri(uri), { transports: ['websocket'] })\n            .on('connect', onConnect.bind(this))\n            .on('disconnect', onDisconnect.bind(this))\n            .on('rempl:get ui', onGetUI.bind(this))\n            .on('rempl:to publisher', onData.bind(this));\n    }\n\n    get type(): string {\n        return 'unknown';\n    }\n\n    setClientId(id: string): void {\n        this.id = id;\n    }\n\n    /**\n     * Send data through WS\n     */\n    send(name: string, arg: unknown, callback?: AnyFn): void {\n        this.socket.emit(name, arg, callback);\n    }\n\n    /**\n     * Get self info\n     */\n    getInfo(): SelfInfo {\n        return {\n            id: this.id,\n            sessionId: this.sessionId,\n            type: this.type,\n            publishers: [...this.publishers],\n        };\n    }\n\n    /**\n     * Send self info to server\n     */\n    sendInfo() {\n        const newInfo = this.getInfo();\n\n        if (valuesChanged(this.info, newInfo)) {\n            this.info = newInfo;\n            this.send('rempl:endpoint info', this.info);\n        }\n    }\n\n    createApi(publisher: TransportPublisher): API | undefined {\n        if (this.publishersMap.has(publisher.id as string)) {\n            if (DEBUG) {\n                console.error(\n                    DEBUG_PREFIX + 'Publisher `' + publisher.id + '` is already registered'\n                );\n            }\n\n            return;\n        }\n\n        if (publisher.id) {\n            this.publishers.push(publisher.id);\n            // todo точно всегда есть getRemoteUI\n            this.publishersMap.set(publisher.id, {\n                getRemoteUI: publisher.getRemoteUI,\n            });\n        }\n\n        this.sendInfo();\n\n        return {\n            connected: this.connected,\n            send: send.bind(this, publisher.id),\n            subscribe: subscribe.bind(this, publisher.id),\n        };\n    }\n\n    sync(publisher: TransportPublisher) {\n        const api = this.createApi(publisher);\n\n        if (api) {\n            api.subscribe(publisher.processInput.bind(publisher));\n            api.connected.link((connected) => {\n                publisher.setupChannel('ws', api.send, this.remoteEndpoints, connected);\n            });\n        }\n    }\n}\n"],"names":["utils.subscribe","utils.genUID"],"mappings":"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"}