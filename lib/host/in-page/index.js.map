{"version":3,"file":"index.js","sources":["../../../src/host/in-page/index.ts"],"sourcesContent":["/* eslint-env browser */\nimport { Host } from '../../types.js';\nimport { trustedEmptyHTML } from '../../utils/index.js';\nimport { EventTransport } from '../../transport/event.js';\nimport { createSandbox } from '../../sandbox/browser/index.js';\nimport view from './view.js';\n\nlet publishers: string[] = [];\nlet selectedPublisherId: string | null = null;\nlet autoSelectPublisher = false;\nlet teardownTimer: ReturnType<typeof setTimeout>;\nlet transport: EventTransport | null = null;\nlet sandbox: ReturnType<typeof createSandbox> | null = null;\nlet host: Host | null = null;\n\nfunction cleanupSandbox() {\n    if (sandbox !== null) {\n        sandbox.destroy();\n        sandbox = null;\n    }\n}\n\nfunction selectPublisher(publisherId: string | null = null) {\n    if (!publisherId) {\n        publisherId = null;\n    }\n\n    if (publisherId !== selectedPublisherId) {\n        autoSelectPublisher = false;\n        selectedPublisherId = publisherId;\n\n        if (selectedPublisherId) {\n            view.selectPublisher(selectedPublisherId);\n            view.show((host as Host).deactivate);\n            (transport as EventTransport).onInit(\n                { id: selectedPublisherId },\n                function initSandbox(papi) {\n                    papi.getRemoteUI((error, type, content) => {\n                        const sandboxContainerEl = view.getSandboxContainer();\n\n                        cleanupSandbox();\n\n                        if (error) {\n                            const errorEl = document.createElement('div');\n                            errorEl.append('Error on loading UI: ', error);\n                            errorEl.setAttribute(\n                                'style',\n                                'margin:10px;padding:5px 10px;border-radius:3px;border:1px solid #eba8a8;color:#f34040;background:#ffe0e0;'\n                            );\n\n                            sandboxContainerEl.innerHTML = trustedEmptyHTML;\n                            sandboxContainerEl.append(errorEl);\n                        } else {\n                            sandbox = createSandbox(\n                                {\n                                    container: sandboxContainerEl,\n                                    type,\n                                    content,\n                                },\n                                (api) => {\n                                    papi.subscribe(api.send);\n                                    api.subscribe(papi.send);\n                                }\n                            );\n                            sandbox.setConnected(true);\n                        }\n                    });\n                }\n            );\n        } else {\n            view.hide();\n            cleanupSandbox();\n        }\n    }\n}\n\nexport function getHost() {\n    if (host !== null) {\n        return host;\n    }\n\n    transport = EventTransport.get('rempl-inpage-host', 'rempl-inpage-publisher');\n    transport.remoteEndpoints.on((endpoints) => {\n        publishers = endpoints;\n        view.setPublisherList(publishers, selectPublisher);\n\n        if (autoSelectPublisher && !selectedPublisherId && publishers.length) {\n            selectPublisher(publishers[0]);\n        }\n    });\n\n    return (host = {\n        activate(publisher) {\n            const publisherId =\n                typeof publisher === 'string'\n                    ? publisher\n                    : publisher?.id || selectedPublisherId || publishers[0] || null;\n\n            clearTimeout(teardownTimer);\n            selectPublisher(publisherId);\n            view.show((host as Host).deactivate);\n\n            if (!selectedPublisherId) {\n                autoSelectPublisher = true;\n            }\n        },\n        deactivate(publisher) {\n            const publisherId = typeof publisher === 'string' ? publisher : publisher?.id || null;\n\n            autoSelectPublisher = false;\n\n            if (!publisherId || publisherId === selectedPublisherId) {\n                view.softHide();\n                // tear down subscriber in 15 sec\n                clearTimeout(teardownTimer);\n                teardownTimer = setTimeout(() => selectPublisher(), 15000);\n            }\n        },\n    });\n}\n"],"names":[],"mappings":"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"}